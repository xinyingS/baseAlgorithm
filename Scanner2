Scanner2
1.连续读取字符串
(1)
public class Zifuchuang {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while(sc.hasNext()){
            String s = sc.nextLine();
            splitString(s);
        }
    }

    private static void splitString(String s){
        while(s.length() >= 8){
            System.out.println(s.substring(0, 8));
            s = s.substring(8);
        }

        if(s.length() < 8 && s.length() > 0){
            s = s + "00000000";
            System.out.println(s.substring(0, 8));
        }
    }
}

(2)
public class RandomNum {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while(sc.hasNext()){

            int num = sc.nextInt();
            TreeSet<Integer> set = new TreeSet<Integer>();
            for(int i = 0 ; i < num ;i++){
                int curr = sc.nextInt();
                set.add(curr);
            }
            for(Integer i : set){
                System.out.println(i);
            }
        }
    }
}

2.同一行读取字符串和一个字符 ->
ABCDEF A
public class CountCharacter {
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        String str = s.next().toUpperCase();
        char c = s.next().toUpperCase().charAt(0);
        //char c = s.next().toUpperCase().toCharArray()[0];
        helper(str, c);
    }

    private static void helper(String str, char target){
        int count = 0;
        //char[] chars = str.toCharArray();
        for(int i = 0; i < str.length(); i++){
            if(str.charAt(i) == target){
                count ++;
            }
        }

        System.out.println(count);
    }
}
